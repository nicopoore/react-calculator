{"version":3,"sources":["components/Button.js","components/NumPad.js","components/Output.js","components/Input.js","components/Author.js","App.js","reportWebVitals.js","index.js"],"names":["Button","props","handleClick","updateInput","updateOutput","evalEquation","equation","Math","round","eval","replace","toString","e","SyntaxError","handleEmpty","empty","charAt","parseInt","newInput","buttonType","input","output","length","concat","content","match","isNaN","dispatch","type","newOutput","bind","divId","this","id","className","onClick","Component","mapStateToProps","state","connect","NumPad","renderButtons","i","arr","button","numPad","numPadData","map","_","Author","href","defaultState","store","createStore","action","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cbd38c09.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nclass Button extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.updateInput = this.updateInput.bind(this)\r\n  }\r\n  \r\n  handleClick = () => {\r\n    this.updateInput()\r\n    this.updateOutput()\r\n  }\r\n\r\n  evalEquation = (equation) => {\r\n    try {\r\n      return (Math.round(1000000000000 * eval(equation.replace(/x/g, '*'))) / 1000000000000).toString()\r\n    } catch (e) {\r\n      if (e instanceof SyntaxError) {\r\n        return 'NaN'\r\n      }\r\n    }\r\n  }\r\n\r\n  handleEmpty = (empty) => {\r\n    if(empty.charAt(0) === '0' && empty.charAt(1) !== '.') {\r\n      return parseInt(empty).toString()\r\n    } else return empty\r\n  }\r\n\r\n  updateInput = () => {\r\n    let newInput\r\n\r\n    switch (this.props.buttonType) {\r\n      case 'clear':\r\n        newInput = ''\r\n        break;\r\n      case 'equals':\r\n        newInput = this.evalEquation(this.props.input)\r\n        break;\r\n      case 'number':\r\n        if (this.props.output.length >= 20) {\r\n          newInput = this.props.input\r\n        } else {\r\n          newInput = this.props.input.concat(this.props.content).toString()\r\n        }\r\n        break;\r\n      case 'decimal':\r\n        if (this.props.output.length >= 20) {\r\n          newInput = this.props.input\r\n        } else if(this.props.output.match(/\\.+/)) {\r\n          newInput = this.props.input\r\n        } else if(isNaN(this.props.input.charAt(this.props.input.length-1)) || this.props.input === '') {\r\n          newInput = this.props.input.concat('0.')\r\n        } else {\r\n          newInput = this.props.input.concat(this.props.content)\r\n        }\r\n        break;\r\n      case 'operation':\r\n        if(this.props.content === '-' && this.props.output === '-') {\r\n          newInput = this.props.input\r\n        } else if((isNaN(this.props.output) && this.props.content !== '-')) {\r\n          newInput = this.props.input.replace(/\\D*$/, this.props.content)\r\n        } else {\r\n          newInput = this.props.input.concat(this.props.content)\r\n        }\r\n        break;\r\n      default:\r\n        newInput = this.props.input\r\n    }\r\n\r\n    newInput = this.handleEmpty(newInput)\r\n\r\n    this.props.dispatch({\r\n      type: 'UPDATE_INPUT',\r\n      input: newInput\r\n    })\r\n  }\r\n\r\n  updateOutput = () => {\r\n    let newOutput\r\n    switch (this.props.buttonType) {\r\n      case 'clear':\r\n        newOutput = '0'\r\n        break;\r\n      case 'equals':\r\n        newOutput = this.evalEquation(this.props.input)\r\n        break;\r\n      case 'operation':\r\n        newOutput = this.props.content\r\n        break;\r\n      case 'decimal':\r\n        if (this.props.output.length >= 20) {\r\n          newOutput = this.props.output\r\n        } else if(this.props.output.match(/\\.+/)) {\r\n          newOutput = this.props.output\r\n        } else if(this.props.output === '0') {\r\n          newOutput = '0.'\r\n        } else {\r\n          newOutput = this.props.output.concat(this.props.content)\r\n        }\r\n        break;\r\n      case 'number':\r\n        if (this.props.output.length >= 20) {\r\n          newOutput = this.props.output\r\n        } else if (this.props.output.match(/\\.$/)) {\r\n          newOutput = this.props.output.concat(this.props.content)\r\n        } else {\r\n          newOutput = this.props.output.concat(this.props.content).replace(/(?!\\.)\\W*x*/g, \"\")\r\n        }\r\n        break;\r\n      default:\r\n        newOutput = this.props.output\r\n        break;\r\n    }\r\n\r\n    newOutput = this.handleEmpty(newOutput)\r\n\r\n    this.props.dispatch({\r\n      type: 'UPDATE_OUTPUT',\r\n      output: newOutput\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const divId = this.props.id.concat('-div')\r\n    return (\r\n      <div id={divId} className=\"padButton\">\r\n        <button id={this.props.id} onClick={this.handleClick}>{this.props.content}</button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  input: state.input,\r\n  output: state.output,\r\n})\r\n\r\nexport default connect(mapStateToProps)(Button)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Button from './Button'\r\n\r\nclass NumPad extends Component {\r\n\r\n  renderButtons = (i, arr) => {\r\n    return (\r\n      <Button\r\n        key={arr[i].id}\r\n        id={arr[i].id}\r\n        content={arr[i].content}\r\n        buttonType={arr[i].button}\r\n      />\r\n    )\r\n  }\r\n\r\n  render() {\r\n    let numPad = this.props.numPadData.map((_, i, arr) => this.renderButtons(i, arr))\r\n    \r\n    return (\r\n      <div id=\"NumPad\">\r\n        {numPad}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  numPadData: state.numPadData\r\n})\r\n\r\nexport default connect(mapStateToProps)(NumPad)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nconst Output = (props) => {\r\n  return (\r\n    <div className=\"calc-display output\" id=\"display\">\r\n      {props.output}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  output: state.output\r\n})\r\n\r\nexport default connect(mapStateToProps)(Output)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nconst Input = (props) => {\r\n  return (\r\n    <div className=\"calc-display input\" id=\"input\">\r\n      {props.input}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  input: state.input\r\n})\r\n\r\nexport default connect(mapStateToProps)(Input)","import React from 'react'\r\n\r\nexport default function Author() {\r\n  return (\r\n    <div id=\"author\">\r\n      created by <a href=\"https://linkedin.com/in/nicolas-poore\">Nicolás Poore</a>\r\n    </div>\r\n  )\r\n}\r\n","import './App.css';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport { NumPad, Input, Output } from './components'\nimport Author from './components/Author'\n\nconst defaultState = {\n  input: '',\n  output: '0',\n  numPadData: [\n    {\n      id: \"clear\",\n      content: \"AC\",\n      buttonType: \"clear\"\n    },\n    {\n      id: \"divide\",\n      content: \"/\",\n      buttonType: \"operation\"\n    },\n    {\n      id: \"multiply\",\n      content: \"x\",\n      buttonType: \"operation\"\n    },\n    {\n      id: \"seven\",\n      content: \"7\",\n      buttonType: \"number\"\n    },\n    {\n      id: \"eight\",\n      content: \"8\",\n      buttonType: \"number\"\n    },\n    {\n      id: \"nine\",\n      content: \"9\",\n      buttonType: \"number\"\n    },\n    {\n      id: \"subtract\",\n      content: \"-\",\n      buttonType: \"operation\"\n    },\n    {\n      id: \"four\",\n      content: \"4\",\n      buttonType: \"number\"\n    },\n    {\n      id: \"five\",\n      content: \"5\",\n      buttonType: \"number\"\n    },\n    {\n      id: \"six\",\n      content: \"6\",\n      buttonType: \"number\"\n    },\n    {\n      id: \"add\",\n      content: \"+\",\n      buttonType: \"operation\"\n    },\n    {\n      id: \"one\",\n      content: \"1\",\n      buttonType: \"number\"\n    },\n    {\n      id: \"two\",\n      content: \"2\",\n      buttonType: \"number\"\n    },\n    {\n      id: \"three\",\n      content: \"3\",\n      buttonType: \"number\"\n    },\n    {\n      id: \"equals\",\n      content: \"=\",\n      buttonType: \"equals\"\n    },\n    {\n      id: \"zero\",\n      content: \"0\",\n      buttonType: \"number\"\n    },\n    {\n      id: \"decimal\",\n      content: \".\",\n      buttonType: \"decimal\"\n    }\n  ]\n}\n\nconst rootReducer = (state = defaultState, action) => {\n  switch(action.type) {\n    case 'UPDATE_INPUT':\n      return {\n        ...state,\n        input: action.input\n      }\n    case 'UPDATE_OUTPUT':\n      return {\n        ...state,\n        output: action.output\n      }\n    default:\n      return state\n  }\n}\n\nconst store = createStore(rootReducer)\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <Input />\n        <Output />\n        <NumPad />\n        <Author />\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}